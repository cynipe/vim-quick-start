"-------------------------------------------------------------------------------
" 補完・履歴 Complete
"-------------------------------------------------------------------------------
set wildmenu               " コマンド補完を強化
set wildchar=<tab>         " コマンド補完を開始するキー
set wildmode=list:full     " リスト表示，最長マッチ
set history=1000           " コマンド・検索パターンの履歴数
set complete& complete+=k            " 補完に辞書ファイル追加

"------------------------------------
" neocomplecache.vim
"------------------------------------
let g:acp_enableAtStartup = 0                           " Disable AutoComplPop.
let g:neocomplcache_enable_at_startup = 1               " Use neocomplcache.
let g:neocomplcache_enable_smart_case = 1               " Use smartcase.
let g:neocomplcache_enable_camel_case_completion = 1    " Use camel case completion.
let g:neocomplcache_enable_underbar_completion = 1      " Use underbar completion.
let g:neocomplcache_min_syntax_length = 3               " Set minimum syntax keyword length.
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'
let g:neocomplcache_enable_quick_match = 1

" Define dictionary.
if !exists('g:neocomplcache_dictionary_filetype_lists')
  let g:neocomplcache_dictionary_filetype_lists = {}
endif
let g:neocomplcache_dictionary_filetype_lists.default = '\h\w*'

" Define keyword patterns.
if !exists('g:neocomplcache_keyword_patterns')
  let g:neocomplcache_keyword_patterns = {}
endif
let g:neocomplcache_keyword_patterns.default = '\h\w*'


" Define omni patterns
if !exists('g:neocomplcache_omni_patterns')
  let g:neocomplcache_omni_patterns = {}
endif

"インクルードパスの指定
if !exists('g:neocomplcache_include_paths')
  let g:neocomplcache_include_paths = {}
endif

"インクルード文のパターンを指定
if !exists('g:neocomplcache_include_patterns')
  let g:neocomplcache_include_patterns = {}
endif

"インクルード先のファイル名の解析パターン
if !exists('g:neocomplcache_include_exprs')
  let g:neocomplcache_include_exprs = {}
endif

" ファイルを探す際に、この値を末尾に追加したファイルも探す。
if !exists('g:neocomplcache_include_suffixes')
  let g:neocomplcache_include_suffixes = {}
endif

" Snippets
let g:neocomplcache_snippets_dir = '~/.vim/snippets'

" Recommended key-mappings.
" <CR>: close popup and save indent.
inoremap <expr><CR>  neocomplcache#close_popup()."\<CR>"
" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><C-y>  neocomplcache#close_popup()
inoremap <expr><C-e>  neocomplcache#cancel_popup()

" " <C-n>で補完表示
" inoremap <expr><C-n>  pumvisible() ? "\<C-n>" : "\<C-x>\<C-u>\<C-p>"
" " <C-p>でキーワード補完
" inoremap <expr><C-p> pumvisible() ? "\<C-p>" : "\<C-p>\<C-n>"
" " 補完候補の共通部分までを補完する
" inoremap <expr><C-s> neocomplcache#complete_common_string()
" " buffer開いたらneoconでcache
autocmd R BufReadPost,BufEnter,BufWritePost :NeoComplCacheCachingBuffer <buffer>
